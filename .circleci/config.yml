version: 2.1

orbs:
  aws-cli: circleci/aws-cli@2.0.3
  kubernetes: circleci/kubernetes@0.4.0
  aws-eks: circleci/aws-eks@0.2.3

jobs:
  create-small-cluster:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
    steps:
      - checkout
      - aws-eks/install-aws-iam-authenticator:
          release-tag: ""
      - run:
          name: Install the eksctl tool
          command: |
            if which eksctl > /dev/null; then
            echo "eksctl is already installed"
            exit 0
            fi
            mkdir -p eksctl_download
            curl --silent --location --retry 5 "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C eksctl_download
            chmod +x eksctl_download/eksctl
            SUDO=""
            if [ $(id -u) -ne 0 ] && which sudo > /dev/null ; then
            SUDO="sudo"
            fi
            $SUDO mv eksctl_download/eksctl /usr/local/bin/
            rmdir eksctl_download
      - aws-eks/create-cluster:
          cluster-name: << parameters.cluster-name >>
          skip-kubectl-install: false
          verbose: 3
          node-type: t2.small
          nodes-max: 2
          ssh-access: false
          ssh-public-key: ""

  create-deployment:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
    steps:
      - checkout
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          install-kubectl: true
      - kubernetes/create-or-update-resource:
          get-rollout-status: true
          resource-file-path: deployment.json
          resource-name: deployment/blue

  create-service:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
    steps:
      - checkout
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          install-kubectl: true
      - kubernetes/create-or-update-resource:
          resource-file-path: service.json
          resource-name: service/bluegreenlb

  test-deployment:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
    steps:
      - kubernetes/install
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
      - run:
          name: Kube cluster
          command: |
            kubectl get svc
            kubectl get nodes
            kubectl get deployment

  delay:
    executor: aws-eks/python3
    steps:
      - run:
          command: |
            sleep 120

  delete-cluster:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          capstoneproject
        type: string
    steps:
      - checkout
      - aws-eks/install-aws-iam-authenticator:
          release-tag: ""
      - run:
          name: Install the eksctl tool
          command: |
            if which eksctl > /dev/null; then
            echo "eksctl is already installed"
            exit 0
            fi
            mkdir -p eksctl_download
            curl --silent --location --retry 5 "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C eksctl_download
            chmod +x eksctl_download/eksctl
            SUDO=""
            if [ $(id -u) -ne 0 ] && which sudo > /dev/null ; then
            SUDO="sudo"
            fi
            $SUDO mv eksctl_download/eksctl /usr/local/bin/
            rmdir eksctl_download
      - aws-eks/delete-cluster:
          cluster-name: << parameters.cluster-name >>

workflows:
  deployment:
    jobs:
       - create-small-cluster:
           cluster-name: eks-demo-deployment
       - delay:
           requires:
             - create-cluster

    #   - create-service:
     #      cluster-name: eks-demo-deployment
     #    
     #    requires:
     #      - create-small-cluster
     #  - create-deployment:
     #      cluster-name: eks-demo-deployment
     #      requires:
     #        - create-service
     #  - test-deployment:
     #      cluster-name: eks-demo-deployment

      # - aws-eks/update-container-image:
      #     cluster-name: eks-demo-deployment
      #     container-image-updates: "blue=andresaaap/testblueimage:latest"
      #     record: true
      #     requires:
      #       - create-deployment
      #     resource-name: deployment/blue
      #- delete-cluster:
      #    cluster-name: eks-demo-deployment
      # requires:
      #   - delay
